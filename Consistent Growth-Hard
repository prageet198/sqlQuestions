DIFFICULTY:-Hard
COMPANY:-Google

Question:-
In a financial analysis project, you are tasked with identifying companies that have consistently increased their revenue by at least 25% every year. 
You have a table named revenue that contains information about the revenue of different companies over several years.
Your goal is to find companies whose revenue has increased by at least 25% every year consecutively. So for example If a company's 
revenue has increased by 25% or more for three consecutive years but not for the fourth year, it will not be considered.


Write an SQL query to retrieve the names of companies that meet the criteria mentioned above along with total lifetime revenue , 
display the output in ascending order of company id

Table : revenue 
+-------------+---------------+
| COLUMN_NAME | DATA_TYPE     |
+-------------+---------------+
| company_id  | int           |
| year        | int           |
| revenue     | decimal(10,2) |
+-------------+---------------+

My Solution:-
WITH initialData AS(
SELECT company_id, year, revenue, LAG(revenue,1,0) OVER(PARTITION BY company_id ORDER BY year) AS lastYearRevenue
from revenue
),
companyRevenue AS(
SELECT * , ((revenue-lastYearRevenue)/lastYearRevenue)*100 AS percRevenue
FROM initialData
),
revenueFlag AS(
SELECT * ,
CASE WHEN percRevenue IS NULL THEN 1
	 WHEN percRevenue>=25 THEN 1 ELSE 0 END AS revenueFlag
FROM companyRevenue
),
aggRevenue AS(
SELECT company_id, COUNT(*) AS totalRevenue
FROM revenueFlag WHERE revenueFlag='1'
GROUP BY company_id
),
overallRevenue AS(
SELECT company_id, COUNT(*) AS totalOrders, SUM(revenue) AS totalRevenue
FROM revenue
GROUP BY company_id
)
SELECT overallRevenue.company_id, overallRevenue.totalRevenue
FROM overallRevenue INNER JOIN aggRevenue ON overallRevenue.company_id=aggRevenue.company_id AND overallRevenue.totalOrders=aggRevenue.totalRevenue
ORDER BY overallRevenue.company_id

Actual Solution:-
WITH revenue_growth AS (
    SELECT 
        company_id,
        year,
        revenue,
        CASE 
        WHEN revenue >= 1.25 * LAG(revenue,1,0) OVER (PARTITION BY company_id ORDER BY year) THEN 1
            ELSE 0
        END AS revenue_growth_flag
    FROM revenue
)
SELECT company_id, sum(revenue) as total_revenue
FROM revenue_growth
where company_id not in
 (select company_id from revenue_growth where revenue_growth_flag=0)
group by company_id 
ORDER BY company_id;
