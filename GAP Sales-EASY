MEDIUM:-EASY
COMPANY:-IBM

Question:-
You have a table called gap_sales. Write an SQL query to find the total sales for each category in each store for the Q2(April-June) of  2023. 
Return the store ID, category name, and total sales for each category in each store. Sort the result by total sales in ascending order.

 

Tables: gap_sales
+-------------+-------------+
| COLUMN_NAME | DATA_TYPE   |
+-------------+-------------+
| sale_id     | int         |
| store_id    | int         |
| sale_date   | date        |
| category    | varchar(10) |
| total_sales | int         |
+-------------+-------------+

My Solution:-
select store_id,
category,
SUM(total_sales) AS ttSales
from gap_sales
WHERE YEAR(sale_date)='2023' AND DATEPART(QUARTER, sale_date)='2'
GROUP BY category,store_id
ORDER BY ttSales

Actual Solution:-
SELECT store_id, category, SUM(total_sales) AS total_sales
FROM gap_sales
WHERE YEAR(sale_date) = 2023 AND MONTH(sale_date) in (4,5,6)
GROUP BY store_id, category
ORDER BY total_sales;
