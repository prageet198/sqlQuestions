DIFFICULTY:-Hard
COMPANY:-Epam

Question:-
You are given a table named assessments that contains information about candidate evaluations for various technical tasks. 
Each row in the table represents a candidate and includes their years of experience, along with scores for three different tasks: 
SQL, Algorithms, and Bug Fixing. A NULL value in any of the task columns indicates that the candidate was not required to solve that specific task.

Your task is to analyze this data and determine, for each experience level, the total number of candidates and how many of them achieved a "perfect score." 
A candidate is considered to have achieved a "perfect score" if they score 100 in every task they were requested to solve.

The output should include the experience level, the total number of candidates for each level, and the count of candidates who achieved a "perfect score." 
The result should be ordered by experience level.

Table: assessments 
+--------------+----------+
| COLUMN_NAME  | DATA_TYPE|
+--------------+----------+
| candidate_id | int      |
| experience   | int      |
| sql_score    | int      |
| algo         | int      |
| bug_fixing   | int      |
+--------------+----------+

My Solution:-
WITH initialData AS(
SELECT experience,
  CASE 
    WHEN sql_score IS NOT NULL AND algo IS NOT NULL AND bug_fixing IS NOT NULL AND (sql_score + algo + bug_fixing) = 300 THEN 1
    WHEN sql_score IS NOT NULL AND algo IS NOT NULL AND bug_fixing IS NULL AND (sql_score + algo) = 200 THEN 1
    WHEN sql_score IS NOT NULL AND algo IS NULL AND bug_fixing IS NOT NULL AND (sql_score + bug_fixing) = 200 THEN 1
    WHEN sql_score IS NOT NULL AND algo IS NULL AND bug_fixing IS NULL AND sql_score = 100 THEN 1
    WHEN sql_score IS NULL AND algo IS NOT NULL AND bug_fixing IS NOT NULL AND (algo + bug_fixing) = 200 THEN 1
    WHEN sql_score IS NULL AND algo IS NOT NULL AND bug_fixing IS NULL AND algo = 100 THEN 1
    WHEN sql_score IS NULL AND algo IS NULL AND bug_fixing IS NOT NULL AND bug_fixing = 100 THEN 1
    ELSE 0 
  END AS flag
FROM assessments
),
perfect AS(
SELECT experience, COUNT(*) AS perfectCandidates
FROM initialData WHERE flag='1' GROUP BY experience
),
total AS(
  SELECT experience, COUNT(*) AS totalCandidates FROM assessments 
  GROUP BY experience
 )
 SELECT total.experience, totalCandidates, IFNULL(perfectCandidates,0) AS perfectCandidates
 FROM total LEFT JOIN perfect ON total.experience=perfect.experience
 ORDER BY total.experience

Actual Solution:-
select experience, COUNT(*) as total_condidates
,sum(case when (case when sql_score IS null or sql_score=100 then 1 else 0 end +
 case when algo IS null or algo=100 then 1 else 0 end +
 case when bug_fixing IS null or bug_fixing=100 then 1 else 0 end)=3 then 1 else 0 end) as perfect_score_candidates
from assessments
group by experience
order by experience;
