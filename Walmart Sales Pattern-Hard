DIFFICULTY:-Hard
COMPANY:-Walmart

Question:-
You are tasked with analyzing the sales data of a Walmart chain with multiple stores across different locations. The company wants 
to identify the highest and lowest sales months for each location for the year 2023 to gain insights into their sales patterns, display 
the output in ascending order of location. In case of a tie display the latest month.

Table: stores
+-------------+-------------+
| COLUMN_NAME | DATA_TYPE   |
+-------------+-------------+
| store_id    | int         |
| store_name  | varchar(20) |
| location    | varchar(20) |
+-------------+-------------+
Table: transactions 
+------------------+-----------+
| COLUMN_NAME      | DATA_TYPE |
+------------------+-----------+
| customer_id      | int       |
| store_id         | int       |
| amount           | int       |
| transaction_date | date      |
| transaction_id   | int       |
+------------------+-----------+

My Solution:-
WITH transactionData AS(
SELECT store_id, YEAR(transaction_date) AS tranYear, MONTH(transaction_date) AS tranMonth, amount
from transactions
WHERE YEAR(transaction_date)='2023'
),
combineData AS(
SELECT store_id, tranYear, tranMonth, SUM(amount) AS tSales
FROM transactionData
GROUP BY store_id, tranYear, tranMonth
),
locationData AS(
SELECT location,tranMonth,SUM(tSales) AS overallSales
FROM combineData INNER JOIN stores ON combineData.store_id=stores.store_id
GROUP BY location,tranMonth
),
highestMonth AS (
SELECT location,tranMonth, RANK()OVER(PARTITION BY location ORDER BY overallSales DESC, tranMonth DESC) AS highestMonth
FROM locationData
),
lowestMonth AS (
SELECT location,tranMonth, RANK()OVER(PARTITION BY location ORDER BY overallSales, tranMonth DESC) AS lowestMonth
FROM locationData
)
SELECT highestMonth.location, highestMonth.tranMonth AS higestSalesMonth,
lowestMonth.tranMonth AS lowestSalesMonth
FROM highestMonth INNER JOIN lowestMonth ON highestMonth.location=lowestMonth.location
WHERE highestMonth=1 AND lowestMonth=1
ORDER BY highestMonth.location


Actual Solution:-
WITH monthly_sales AS (
    SELECT
        s.location,
        month(t.transaction_date) AS order_month,
        SUM(t.amount) AS total_sales,
        RANK() OVER (PARTITION BY s.location ORDER BY SUM(t.amount) DESC) AS sales_rank_desc,
        RANK() OVER (PARTITION BY s.location ORDER BY SUM(t.amount)) AS sales_rank_asc
    FROM
        transactions t
    JOIN
        stores s ON t.store_id = s.store_id
    GROUP BY
        s.location, month(t.transaction_date))
SELECT
    location,
    MAX(CASE WHEN sales_rank_desc = 1 THEN order_month END) AS highest_sales_month,
    MAX(CASE WHEN sales_rank_asc = 1 THEN order_month END) AS lowest_sales_month
FROM  monthly_sales
GROUP BY location
ORDER BY location;
