DIFFICULTY:-Hard
COMPANY:-Amazon

Question:-
You are analyzing sales data from an e-commerce platform, which includes information about orders placed for various products across different categories. 
Each order contains details such as the order ID, order date, product ID, category, and amount.
Write an SQL to identify the top 3 products within the top-selling category based on total sales. The top-selling category is determined by the 
sum of the amounts sold for all products within that category. Sort the output by products sales in descending order.

Table: orders
+-------------+-------------+
| COLUMN_NAME | DATA_TYPE   |
+-------------+-------------+
| amount      | int         |
| category    | varchar(20) |
| order_date  | date        |
| order_id    | int         |
| product_id  | int         |
+-------------+-------------+
My Solution:-
WITH totalCatgorySales AS(
SELECT category, SUM(amount) AS totalCategorySale
FROM orders
GROUP BY category
),
categoryRanking AS(
SELECT *, ROW_NUMBER() OVER(ORDER BY totalCategorySale DESC) AS ranked
FROM totalCatgorySales
)
SELECT product_id, category , SUM(amount) AS totalSales
FROM orders
WHERE category=(SELECT category FROM categoryRanking WHERE ranked=1)
GROUP BY product_id, category
ORDER BY SUM(amount) DESC
LIMIT 3

Actual Solution:-
WITH category_sales AS (
    SELECT category, SUM(amount) AS total_sales
    FROM orders
    GROUP BY category
),
ranked_categories AS (
    SELECT category, total_sales,
           RANK() OVER (ORDER BY total_sales DESC) AS category_rank
    FROM category_sales
),
top_category AS (
    SELECT category
    FROM ranked_categories
    WHERE category_rank = 1
)
SELECT o.product_id, o.category, SUM(o.amount) AS total_sales
FROM orders o
JOIN top_category tc ON o.category = tc.category
GROUP BY o.product_id, o.category
ORDER BY total_sales DESC
LIMIT 3;
