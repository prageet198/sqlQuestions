DIFFICULTY:-Hard
COMPANY:-JP Morgan

Question:-
You are tasked with analyzing the interest earned by customers based on their account balances and transaction history. Each customer's account accrues 
interest based on their balance and prevailing interest rates. The interest is calculated for the ending balance on each day. Your goal is to determine 
the total interest earned by each customer for the month of March-2024. The interest rates (per day) are given in the interest table as per the balance amount range. 

Please assume that the account balance for each customer was 0 at the start of March 2024.  Write an SQL to calculate interest earned by each customer 
from March 1st 2024 to March 31st 2024, display the output in ascending order of customer id.

Table: transactions
+------------------+-----------+
| COLUMN_NAME      | DATA_TYPE |
+------------------+-----------+
| transaction_id   | int       |
| customer_id      | int       |
| transaction_date | date      |
| amount           | int       |
+------------------+-----------+
Table: interestrates
+---------------+--------------+
| COLUMN_NAME   | DATA_TYPE    |
+---------------+--------------+
| rate_id       | int          |
| max_balance   | int          |
| min_balance   | int          |
| interest_rate | decimal(5,4) |
+---------------+--------------+

My Solution:-
WITH cummulativeData AS(
  SELECT customer_id, transaction_date, SUM(amount) AS dayAmt
  FROM transactions
  GROUP BY customer_id, transaction_date
),
rollingData AS(
SELECT customer_id, transaction_date,
SUM(dayAmt) OVER(PARTITION BY customer_id ORDER BY transaction_date) AS rollingAmt
FROM cummulativeData
),
dateData AS(
SELECT customer_id, transaction_date, rollingAmt,
LEAD(transaction_date,1,'2024-04-01') OVER(PARTITION BY customer_id ORDER BY transaction_date) AS nextTransDate
FROM rollingData
)
SELECT customer_id,
SUM(DATEDIFF(nextTransDate,transaction_date)*rollingAmt*r.interest_rate) AS interestEarned
FROM dateData INNER JOIN InterestRates AS r
ON dateData.rollingAmt BETWEEN r.min_balance AND r.max_balance
GROUP BY customer_id
ORDER BY customer_id

Actual SOlution:-
WITH cte AS (
    SELECT 
        customer_id,
        transaction_date,
        SUM(sum(amount)) OVER (PARTITION BY customer_id ORDER BY transaction_date) AS net_amount
    FROM transactions
group by customer_id,transaction_date
),

cte2 AS (
    SELECT 
        customer_id,
        transaction_date,
        net_amount,
        LEAD(transaction_date, 1, '2024-04-01') OVER (PARTITION BY customer_id ORDER BY transaction_date) AS next_trans_date
    FROM cte
)

SELECT 
    cte2.customer_id,
    SUM(
        DATEDIFF(next_trans_date, transaction_date) * net_amount * ir.interest_rate
    ) AS interest_earned
FROM cte2
INNER JOIN InterestRates ir 
    ON cte2.net_amount BETWEEN ir.min_balance AND ir.max_balance
GROUP BY cte2.customer_id
ORDER BY cte2.customer_id;
